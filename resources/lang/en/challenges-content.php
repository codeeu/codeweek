<?php

return [
    'create-your-own-website-with-html-and-css' => [
        'title' => 'Create your own website with HTML and CSS',
        'author' => 'Marko Šolić',
        'purposes_title' => 'Purpose of the challenge',
        'purposes' => [
            'The purpose of this challenge is to introduce beginners to the world of web development.',
            'By completing this project, participants will learn the basics of HTML and CSS, which are fundamental for creating and styling web pages.',
            'The challenge emphasizes hands-on learning, helping you build your own website from scratch.',
            'You\'ll gain essential skills for web design and become more confident in building your own online presence.'
        ],
        'description_title' => 'Description of the challenge',
        'description' => [
            'Websites are the foundation of Internet presence. Through this lesson, you will learn how to use HTML to structure content and CSS to stylize and create your first website.',
            'Through fun steps, you\'ll create a page that can contain text, images, colors, and links.'
        ],
        'target_audience_title' => 'Target audience',
        'target_audience' => [
            'This challenge is aimed at beginners who are interested in learning how to create websites.',
            'It is perfect for individuals who are new to web development, students, or anyone curious about how websites are built.',
            'No prior coding experience is required.'
        ],
        'experience_title' => 'Experience',
        'experience' => [
            'This is a beginner-level challenge. While some prior knowledge of basic computer operations, such as using a text editor, may be helpful, it is not necessary.',
            'The challenge is designed to be an introduction to HTML and CSS.'
        ],
        'duration_title' => 'Duration',
        'duration' => 'This challenge is expected to take about 1 to 2 hours, depending on your experience level and how much you explore beyond the basics.',
        'materials_title' => 'Recommended tools:',
        'materials' => [
            'PC / Laptop',
            'Regular text editor, such as Notepad (Windows) or TextEdit (Mac)'
        ],
        'instructions_title' => 'Instructions',
        'instructions' => [
            'Educator Tips before you start:',
            'If you are new to web development, don’t worry! Here are some tips to help you guide students through the process:',
            'Start with the basics: Focus on explaining the core concepts of HTML (structure of a webpage) and CSS (styling elements).',
            'Be patient and allow students time to understand the purpose of each tag and property.',
            'Explain the structure: When introducing HTML tags, visually break down how the document is structured.',
            'Show students the relationship between opening and closing tags, attributes, and nesting.',
            'Avoid common mistakes: Beginners often forget to close tags properly or misplace curly brackets {} in CSS.',
            'Remind students to check for syntax errors regularly.',
            'Interactive learning: Encourage students to experiment with changing text and styles.',
            'Show them how small changes in HTML or CSS can immediately reflect on the page by refreshing the browser.',
            'Be open to creativity: There’s no one "right" way to design a website.',
            'Encourage students to explore different fonts, colors, and layouts.',
            'Common mistakes to watch out for:',
            'Forgetting to link the CSS file to the HTML file.',
            'Incorrect tag nesting in HTML.',
            'Typos in CSS properties (e.g., using colour instead of color in some cases).',
            'Overcomplicating the page structure – simple websites can look very professional with just a few lines of code!',
            'Step 1: Preparing the environment',
            'To create a website, you do not need to install special tools other than a regular text editor, such as Notepad (Windows) or TextEdit (Mac).',
            'The whole website can be made in a plain text editor, and there are even websites on the Internet that are completely made that way.',
            'If you want to see an example of such a site, look at the web site of the Croatian Association of Informatics: hsin.hr',
            'Step 2: Basic HTML Document Structure',
            'Open a new document in your editor and save it as index.html',
            'Depending on the version of Windows or Macs you\'re using for this, you\'ll first need to find an option that allows you to modify file extensions, because your index.txt needs to become index.html',
            'In an editor such as Notepad, enter the basic structure of the HTML document:',
            '<!DOCTYPE html>',
            '<html lang="en">',
            '<head>',
            '<target charset="UTF-8">',
            '<meta name="viewport" content="width=device-width, initial-scale=1.0">',
            '<title>My first website</title>',
            '</head>',
            '<body>',
            '<h1>Welcome to my website!</h1>',
            '<p>This is my first website I created using HTML and CSS.</p>',
            '</body>',
            '</html>',
            'This is what your website should look like without CSS (in Croatian, your example is of course in English):',
            'Step 3: Add Styles with CSS',
            'CSS is used to stylise elements on the page. To get started, we\'ll add basic styles like background colour, text colour, and font size.',
            'In the same folder, create a new text document and call it style.css.',
            'In style.css, type the following:',
            'body {',
            'background-colour: #f0f8ff; /* Light blue background */',
            'colour: #333; /* Dark Gray Text */',
            'font-family: Arial, sans-serif; /* Font for text */',
            'text-align: centre; /* Align text to centre */',
            '}',
            'h1 {',
            'colour: #4CAF50; /* Green title */',
            '}',
            'p {',
            'font-size: 18px; /* Paragraph font size */',
            'colour: #555; /* Gray-blue text for paragraph */',
            '}',
            'Step 4: Connect HTML to CSS',
            'Once you have created the CSS file, you must link it to the HTML file.',
            'You\'ll do this in the <head> section of the HTML by adding the following line of code:',
            '<link rel="stylesheet" href="style.css">',
            'This will let the HTML document "know" that it needs to use styles from the CSS file.',
            'Step 5: Start your page',
            'Save both files: index.html and style.css.',
            'Double-click index.html and open it in your Internet browser.',
            'Now you\'ll see your website with text in the middle and the basic styles you\'ve added',
            'This is what your website should look like now:',
            'Encouraging Diversity in STEM:',
            'Web development is for everyone! Whether you are a young student, an adult looking for a new career, or someone from an underrepresented group, this challenge invites you to explore the exciting world of creating websites.',
            'STEM (Science, Technology, Engineering, and Mathematics) fields have historically lacked diversity, and it’s important to encourage all people—regardless of gender, race, or background—to explore coding and technology.',
            'Everyone has unique perspectives and experiences that can make the world of web development more creative and inclusive.',
            'As you work on your website, think about how you can make the digital world a place where everyone feels represented and welcome.',
            'You don’t have to be a tech expert to begin—just start learning and build from there!',
            'Making Your Website Accessible:',
            'When building a website, it\'s important to ensure that it can be easily accessed by as many people as possible, including those with disabilities.',
            'Here are some tips for creating more accessible websites:',
            'Contrast: Ensure good contrast between the background and text color so that it’s easier for people with visual impairments to read.',
            'For example, a light background with dark text works best.',
            'Alt Text for Images: If you add images to your website (in future steps), make sure to add alt text to describe what’s in the image.',
            'This is especially helpful for people using screen readers.',
            'Semantic HTML: Use correct HTML tags for better structure and accessibility.',
            'For example, use <h1> for the main title, and <p> for paragraphs to help screen readers understand the content better.',
            'Focus on Readability: Make sure the text is easy to read with a simple, sans-serif font like Arial.',
            'You can also increase the font size for readability.',
        ],
        'mini_simulation_title' => 'Mini simulation:',
        'mini_simulation' => [
            'Check your knowledge',
            '1. What is HTML?',
            'Computer language for image creation',
            'Content structuring language on the website',
            'Image Editor',
            '2. What is CSS?',
            'Language for creating online databases',
            'Language for styling and layout of websites',
            'Computer file management program',
            '3. How do we connect CSS to HTML?',
            'By using the <link> tag in the HTML document',
            'Using <style> tags within a HTML',
            'Unable to connect',
            'Correct answers: 1.b, 2.b, 3.a',
            'Modify your page:',
            'Try changing the background color.',
            'Add another heading (h2) with text below the main title.',
            'Add a link to another website, e.g. Google.',
            'After any change – refresh the page!',
        ],
        'additional_resources_title' => 'Additional resources:',
        'additional_resources' => [
            'https://developer.mozilla.org/en-US/docs/Web/HTML',
            'https://developer.mozilla.org/en-US/docs/Web/CSS',
        ]
    ],

    'train-it-like-fei-fei-li' => [
        'title' => 'Train it like Fei-Fei Li – Giving Vision to Computers!',
        'author' => 'Chouliara Theodora',
        'purposes_title' => 'Purpose of the challenge',
        'purposes' => [
            'To learn the basics of Machine Learning and image recognition.',
            'To train a computer to distinguish between different images (e.g., dog vs. cat, dolls vs. teddy bears).',
            'To explore how AI and Machine Learning are used in real life.',
            'To be inspired by Fei-Fei Li’s contributions to AI and image recognition.',
            'To encourage girls to engage in coding and STEM careers.'
        ],
        'description_title' => 'Description of the challenge',
        'description' => 'Train an AI model like Fei-Fei Li! Use Teachable Machine to teach a computer to recognize images and explore the power of Machine Learning while breaking gender stereotypes in tech.',
        'target_audience_title' => 'Target audience',
        'target_audience' => 'Primary School students (6 to 12 years)',
        'experience_title' => 'Experience',
        'experience' => 'Beginner - No prior coding experience required; suitable for complete beginners.',
        'duration_title' => 'Duration',
        'duration' => '60 minutes',
        'materials_title' => 'Recommended tool',
        'materials' => [
            'Teachable Machine (accessible via web browser)',
            'Computer or tablet with a camera',
            'Internet connection (for training the AI model)',
            'Toys and classroom objects (e.g., dolls, teddy bears) for training the AI model',
            'Projector or screen (optional, for classroom demonstrations))'
        ],
        'instructions_title' => 'Instructions',
        'instructions' => [
            'Step 1: Introduction to Machine Learning & Fei-Fei Li',
            'Explain Machine Learning:',
            'Computers can learn to recognize images, just like humans. Machine Learning helps computers "see" objects by analyzing examples.',
            'Introduce Fei-Fei Li:',
            'Fei-Fei Li is a leading scientist in AI and Computer Vision. She developed ImageNet, a huge dataset that taught computers to recognize images. Just like Fei-Fei Li helped computers see, boys and girls can teach a computer to recognize objects too!',
            'Step 2: Set Up Teachable Machine',
            'Go to Teachable Machine (https://teachablemachine.withgoogle.com/train)',
            'Choose "Image Project" to train the computer to recognize images.',
            'Click on "Standard Image Model".',
            'Step 3: Choose Categories for Training',
            'Decide what categories you want the computer to recognize. You can create categories based on classroom objects (e.g., blocks, teddy bears, dolls, etc.).',
            'Example categories: Dolls and Teddy bears',
            'Step 4: Collect Training Images',
            'Create two categories: Dolls and Teddy Bears.',
            'Option 1: Use real objects',
            'Show a doll in front of the camera and take pictures for the "Dolls" category.',
            'Do the same for a teddy bear for the "Teddy Bears" category.',
            'Option 2: Find images online',
            'Search for pictures of dolls and teddy bears on Google.',
            'Save the images in two separate folders ("Dolls" and "Teddy Bears").',
            'Upload the images from each folder to the Teachable Machine for training.',
            'Step 5: Train the AI Model',
            'After capturing enough images, click "Train Model".',
            'Wait for the model to learn from the images.',
            'Step 6: Test the Model',
            'Once the model is trained, click "Test Model" to see how well it recognizes new images. Test the AI by showing the computer new objects that were not part of the training images (e.g., show a toy that wasn’t used for training). See how well the model recognizes it and categorizes it correctly.',
            'Step 7: Evaluate the Model',
            'Discuss with the students:',
            'Did the model recognize the objects correctly?',
            'Were there any mistakes? What could be improved?',
            'What happens if you train it with more pictures?',
            'Step 8: Save and Share the Model',
            'Once you are happy with the model’s accuracy, click "Export Model" to save your project. You can share the model with other classes or on the Teachable Machine website by clicking "Share".',
            'The model we made above can be found here: https://teachablemachine.withgoogle.com/models/hRNy1ZPlQ/'
        ],
        'examples_title' => 'Examples',
        'examples' => [
            'AI in Retail & Shopping:',
            'Some stores use AI-powered cameras to recognize products and track inventory.',
            'Similar technology helps self-checkout systems recognize items without barcodes.',
            'AI & Assistive Technology',
            'AI can identify objects to help visually impaired individuals navigate the world.',
            'Smart cameras can describe what they "see" to assist users in real time.'
        ],
    ],

    'simulate-dice-in-python' => [
        'title' => 'Simulate Dice in Python',
        'author' => 'Marko Šolić',
        'purposes_title' => 'Purpose of the challenge',
        'purposes' => [
            'The purpose of this challenge is to introduce students to random number generation and loops in Python.',
            'By simulating a dice roll, students will learn how computers can generate random outcomes and how to repeat actions multiple times using a loop.',
            'This exercise also lays the foundation for building simple games and simulations.'
        ],
        'description_title' => 'Description of the challenge',
        'description' => [
            'Dice-roll simulation is a great way to learn basic work with random numbers in Python.',
            'In this lesson, we will learn how to use the random module to generate random numbers and how to use that number to simulate a roll of the dice.',
            'Through this task, you will understand how Python can generate numbers within a certain range.'
        ],
        'target_audience_title' => 'Target audience',
        'target_audience' => 'Primary and secondary school students, beginners in Python, anyone learning about random numbers, games, or basic programming logic.',
        'experience_title' => 'Experience',
        'experience' => 'No prior programming experience is required. Basic familiarity with typing and using a computer is enough.',
        'duration_title' => 'Duration',
        'durations' => [
            '30 to 45 minutes for a basic version',
            'Up to 60 minutes if exploring advanced options (two dice, most frequent roll, etc.)'
        ],
        'materials_title' => 'Recommended tool',
        'materials' => [
            'To get started, you need to have Python installed on your computer. If you haven\'t already, download Python from the official website: https://www.python.org',
            'Open Python IDLE or any text editor (e.g. Visual Studio Code, PyCharm) to write your code.'
        ],
        'instructions_title' => 'Instructions',
        'instructions' => [
            'Step 1: Preparing the environment',
            'To get started, you need to have Python installed on your computer.',
            'If you haven\'t already, download Python from the official website.',
            'Open Python IDLE or any text editor (e.g. Visual Studio Code, PyCharm) to write code.',
            'Step 2: Writing the programme',
            'Open Python IDLE and create a new file to call dice.py.',
            'Enter the following code:',
            '#We import a \'random\' module for generating random numbers',
            'We print a greeting to the user',
            'print("Welcome to the roll-dice simulation!")',
            'import random',
            'Ask the user how many times he wants to roll the dice',
            'throw_num = int(input("How many times do you want to roll the dice? "))',
            'for i in range(throw_num):',
            'result = random.randint(1, 6) #We generate a random number between 1 and 6',
            'print(f"Throwing {i + 1}: {result}")',
            'print("Thanks for playing!")',
            'Visual representation of the code in Python IDLE',
            'Make sure that the indentations in your code are the same like in the example above!',
            'Step 3: Explanation of the code',
            'Import random module: The random module allows you to generate random numbers. The random.randint(a, b) function returns a random integer in the range from a to b, including both ends.',
            'Enter the number of throws: The programme asks the user to enter the number of times he wants to roll the dice. We convert the entered number to an integer using int().',
            'Toss simulation: The programme uses a loop to perform a dice simulation as many times as the user has entered. For each throw, a random number between 1 and 6 is generated, representing the result of the throw.',
            'Print results: For each throw, the result is printed (the number that has "fallen" on the dice). At the end of the programme, a message of gratitude is printed',
            'Step 4: Run the programme',
            'Save the file as dice.py.',
            'Run your programme at Python IDLE.',
            'Enter the number of times you want to roll the dice (e.g. 5).',
            'The programme will generate random numbers and print them as a result of each throw.',
        ],
        'quiz_title' => 'Quiz:',
        'quiz' => [
            'Which module in Python allows you to generate random numbers?',
            'random',
            'Math',
            'Time',
            'What does the random.randint(1, 6) function do?',
            'Generates a random number between 1 and 6',
            'Prints a random number on the screen',
            'Prints a number between 1 and 6',
            'How do you convert a user entry to an integer in Python?',
            'float(s)',
            'int()',
            'p()',
            'Correct answers: 1.a, 2.a, 3.b'
        ],
        'mini_simulation_title' => 'Mini simulation:',
        'mini_simulation' => [
            'Modify programme:',
            'Add an option to simulate two dice throws and add their results together.',
            'Add an option for the programme to end up printing the number of times that the programme has "dropped" on the dice the most.',
        ],
        'additional_resources_title' => 'Additional resources:',
        'additional_resources' => [
            'Python official documentation - random module',
            'Learn Python'
        ]
    ],
    'gender-gap-gender-graph' => [
        'title' => 'Gender Gap, Gender Graph',
        'author' => 'Theodora S. Tziampazi',
        'purposes_title' => 'Purpose of the challenge',
        'purposes' => [
            'Understand how data visualization can influence perception.',
            'Identify biases in digital tools through interaction.',
            'Experiment with data input to observe distortions.',
            'Modify code to ensure accurate data representation.',
            'Compare fair and biased data visualizations.',
            'Reflect on the ethical implications of data manipulation.',
            'Discuss real-world consequences of biased statistics.',
            'Develop critical thinking about AI and algorithmic bias.'
        ],
        'description_title' => 'Description of the challenge',
        'description' => 'Investigate bias in data visualization by inputting values, analyzing distortions, modifying code, and exploring how digital tools influence perceptions of gender representation in tech.',
        'educational_goals_title' => 'Educational goals',
        'educational_goals' => [
            'Coding and Programming Logic:',
            'Computational Thinking:',
            'Problem Solving and Debugging:',
            'Creativity and Design Thinking:',
            'Collaboration and Communication:',
        ],
        'target_audience_title' => 'Target Audience',
        'target_audience' => [
            'Primary School students (6 to 12 years)',
            'Lower Secondary School students (12 to 16 years)',
            'Upper Secondary School students (16 to 18 years)',
            'Teachers and educators'
        ],
        'experience_title' => 'Experience',
        'experiences' => [
            'Intermediate - Some basic coding knowledge is recommended; participants should be familiar with fundamental programming concepts.',
            'Advanced - Designed for participants with strong coding skills and prior experience in programming.'
        ],
        'duration_title' => 'Duration',
        'duration' => '2 hours',
        'materials_title' => 'Recommended tool',
        'materials' => [
            'Scratch 3 and the worksheet https://docs.google.com/document/d/1wKwrc825if8-W6QDeNJ3hv2PcPcXIbAw/edit?usp=sharing&ouid=113724828757126842317&rtpof=true&sd=true'
        ],
        'instructions_title' => 'Instructions',
        'instructions' => [
            'You are the user of this digital tool (bar maker) https://scratch.mit.edu/projects/1147892829 . Do not look inside at the code yet.',
            'Click on the green flag and insert data (1-10) that hypothetically represent the number of women in a tech sector. Try with some numbers.',
            '',
            'What do you notice?',
            'Could this be a bug or a decision?',
            'Either way, how can it be fixed?',
            'Manually (user level):',
            'Explore the tool and any draggable sprites.',
            'Is there any position where the problem is solved?',
            'Is there a position where another unexpected outcome is observed?',
            'Food for thought/Discussion',
            'What if the number of women in a sector is underestimated?',
            'What if the number of women in a sector is overestimated?',
            'What if the number of women in a sector is well-estimated but not balanced in terms of gender gap?',
            'What should be done?',
            'Takeaway: How we use the tool (where we situate a component) affects the result.',
            'With coding (creator level): Now, it’s time to see inside the project.',
            'Simple challenge:',
            'Hack the code so that the data presented are equal to the data inserted in any case.',
            'Advanced challenge:',
            'Copy the bar sprite and make it blue (stereotypically referred to male).',
            'Change the y position so that it is visible and comparable with the purple bar.',
            'Create a male symbol as a new sprite.',
            'Tip: You can download/export both sprites (bar, symbol) from the project given at the end of this section as a solution.',
            'Now hack the codes so that when the user input is x (now given 2 times for each bar), the 2 bar makers are:',
            'Fair (same code). Make adjustments in male symbol’s y position in if condition. Debug as you proceed checking both codes.',
            'Unfair in use: Drag the 2 symbols in different positions; give the same input to see the inequality.',
            'Sided/biased (different code)',
            'in favor of men',
            'in favor of women',
            'Experiment so that the code would either mitigate or exacerbate the gender gap…',
            'Explore the two ways the result is biased (dragging and/or coding).',
            'How could these 2 ways be related to each other?',
            'A solution (same code): https://scratch.mit.edu/projects/1151892036',
            'Discussion:',
            'How do you feel that you can create a biased and an unbiased digital tool as well?',
            'Where is the bias more “hidden”? When it comes to dragging among different positions or to code?',
            'Can you imagine cases where a distorted image of something may help (some people-who)?',
            'Do you believe we could support distorted data when the end justifies the means or present the truth by no means?',
            'How do you feel that AI (driven by a given purpose) can try out things like you‘ve tried in this challenge?',
            'More questions:',
            'How do we collect data?',
            'How is our data processed?',
            'How are our actions/beliefs affected by statistics hidden in algorithms (AI or not)?',
            'Takeaway: How we create the tool affects the result or even our worldview.'
        ],
        'real-life-applications_title' => 'Examples',
        'real-life-applications' => [
            'Workplace Diversity Reports – Ensuring accurate representation of gender data in corporate diversity statistics.',
            'Media & News Graphics – Avoiding misleading visualizations in reports on gender equality.',
            'AI & Algorithm Bias – Identifying and mitigating biases in machine learning models processing demographic data.',
            'Hiring & Recruitment Tools – Ensuring fair representation in HR analytics and decision-making software.',
            'STEM Education & Outreach – Using unbiased data to encourage more women in tech fields.',
            'Public Policy & Advocacy – Supporting fair policy decisions with accurate gender gap statistics.',
            'Social Media & Awareness Campaigns – Creating fair visual representations of gender data to drive change.'
        ],
        'variations_title' => 'Variations of the challenge',
        'variations' => [
            'Expanding the challenge to other environments: You could modify the challenge to involve AI bots protecting other ecosystems like forests, rivers, or even urban areas.',
            'The bots would need to address challenges such as deforestation or air pollution.',
        ],
    ],
    'dance-with-ally' => [
        'title' => 'Dance with Ally',
        'author' => 'Kristina Krtalić',
        'purposes_title' => 'Purpose of the challenge',
        'purposes' => [
            'learn to connect micro:bit with Scratch via Bluetooth',
            'understand how to use the Scratch micro:bit extension',
            'use micro:bit buttons to interact with Scratch projects',
            'create interactive games with micro:bit',
            'develop problem-solving and logical thinking skills',
            'enhance creativity through coding'
        ],
        'description_title' => 'Description of the challenge',
        'description' => 'Create a program that will enable simple dance a sprite in Scratch with a micro:bit.
        By connecting Scratch and micro:bit, students gain a comprehensive learning experience that integrates digital and physical computing, enhances problem-solving abilities, and encourages creative exploration.',
        'educational_goals_title' => 'Educational goals',
        'educational_goals' => [
            'Coding and Programming Logic:',
            'students will use Scratch blocks to write event-driven programs that respond to inputs from the micro:bit',
            'students will understand and apply fundamental programming concepts such as loops, decision, conditionals and variables',
            'students will build fluency with block-based programming to control digital and physical outputs',
            'Computational Thinking:',
            'students will decompose problems into smaller parts and design solutions step by step using Scratch',
            'students will use sensor data (e.g., buttons, shake) from the micro:bit to control sprites or animations',
            'students will develop and test algorithms to solve specific challenges (e.g., making the sprite dance when the micro:bit is tilted).',
            'Problem Solving and Debugging:',
            'students will engage in iterative design by testing, identifying bugs, and refining their Scratch code and micro:bit interactions',
            'students will troubleshoot real-time errors involving both software (Scratch scripts) and hardware (micro:bit connection or inputs)',
            'students will document and reflect on changes made during debugging.',
            'Creativity and Design Thinking:',
            'students will create original animations, games, or stories in Scratch that integrate micro:bit inputs as interactive elements',
            'students will express themselves artistically by choreographing sprite movements or designing interactive scenes',
            'students will follow the design process: empathize, ideate, prototype, and test',
            'Collaboration and Communication:',
            'students will work in pairs or small teams to plan, code, and present interactive projects',
            'students will explain their design choices and code logic to peers or a broader audience'
        ],
        'target_audience_title' => 'Target Audience',
        'target_audience' => [
            'Primary School students (6 to 12 years)',
            'Lower Secondary School students (12 to 16 years)'
        ],
        'experience_title' => 'Experience',
        'experience' => 'Intermediate - Some basic coding knowledge is recommended; participants should be familiar with fundamental programming concepts.',
        'duration_title' => 'Duration',
        'duration' => '60 minutes',
        'materials_title' => 'Recommended tool',
        'materials' => [
            'computer',
            'Scratch (https://scratch.mit.edu/)',
            'Scratch link (https://scratch.mit.edu/download/scratch-link)',
            'Scratch micro:bit (https://scratch.mit.edu/microbit)',
            'micro:bit',
            'sprite Ally (https://codeweek-s3.s3-eu-west-1.amazonaws.com/chatbot/ally.png)'
        ],
        'instructions_title' => 'Instructions',
        'instructions' => [
            'Start Scratch.',
            'Create an account in Scratch (if you don\'t have one).',
            'Start creating a new project, add a sprite, add a background, determine the initial position of the sprite when starting the program.',
            'Add a group of micro:bit scripts from the Scratch programming language extension.',
            'Connect the micro:bit to the computer, turn on Bluetooth on the computer (if it is not turned on).',
            'Install and run Scratch link https://scratch.mit.edu/download/scratch-link, download the micro:bit HEX file and save (copy) it to the micro:bit https://scratch.mit.edu/microbit.',
            'The micro:bit extension, find a device near the computer by clicking on the orange button in the micro:bit extension.',
            'Search and find devices.',
            'Create a program with blocks that will enable a sprite dance to selected music (with the start sound block)) that moves when we shake the micro:bit. The dance consists of only two commands: slide on the x-axis left and right. Save the project to your computer.',
            'After creating the program according to the instructions, students can add their own blocks, determine the sprite\'s controls by pressing the A and/or B button on the micro:bit, change the sprite`s appearance, change/add movements,...'
        ],
        'examples_title' => 'Examples',
        'examples' => [
            'Connecting a micro:bit with Scratch to control a dancing sprite is a great way to explore interactive programming. This concept can be extended to various real-life applications and creative projects, such as:',
            '1. interactive dance & fitness programs',
            'use the micro:bit’s accelerometer to track movement and create fitness games',
            'make a dance learning tool where the sprite follows real-life dance moves',
            '2. gesture-based animation & gaming',
            'control Scratch characters with hand gestures or tilt movements',
            'develop simple motion-controlled games, like jumping or dodging obstacles'
        ]
    ],
    'coding-for-the-ocean' => [
        'title' => 'Coding for the Ocean - Build Your AI Bot to Save the Sea',
        'author' => 'Teresa Silvestri',
        'purposes' => [
            'Upon completing the challenge, participants will learn and gain:',
            'The ability to use artificial intelligence to solve environmental problems.',
            'Coding skills to create and program an AI bot.',
            'Knowledge about climate change and the importance of protecting the marine environment.',
            'Problem-solving abilities in the context of science and technology.',
            'Development of logical thinking applied to real-world challenges.',
            'Creativity in designing a bot that can respond to environmental threats.',
            'Practical experience using coding platforms like Code.org.',
            'Teamwork and collaboration while sharing bots and competing with classmates.'
        ],
        'description' => 'Create and train an AI bot to protect the sea! Learn to code, solve environmental problems, and develop logical thinking to safeguard the marine environment.',
        'educational_goals' => [
            'To develop basic skills in programming and artificial intelligence',
            'To promote environmental awareness and the importance of protecting the environment',
            'To encourage creativity and imagination through storytelling',
            'To develop problem-solving and critical thinking skills'
        ],
        'instructions' => [
            'Access Code.org 
            Open your web browser and go to Code.org. 
            If you don\'t have an account, you can create one or log in with an existing one. 
            Start a new project 

            On the main screen, select the course or tutorial related to ocean protection. 
            Click "Start" to begin your project. 
            Follow the step-by-step tutorial 
            
            Code.org will guide you through an interactive tutorial. Read each instruction carefully and complete each step. 
            Make sure to follow the instructions to learn how to program your AI bot. 
            Program your bot 
            
            Use the visual coding blocks to teach your bot how to respond to environmental situations, such as collecting plastic or avoiding obstacles. 
            Modify the blocks to suit different situations and test the bot\'s behavior. 
            Test your bot 
            
            After writing the code, test your bot to see how it handles the challenges. 
            If the bot doesn\'t work as expected, go back and modify it, then retest it until it\'s effective. 
            Share your bot with the class 
            
            Once your bot is ready, copy the project link and share it with your classmates. 
            Join the competition to see which bot is the most effective at protecting the sea. 
            Review and improve 
            
            After completing the challenge, review your code and look for ways to improve it. 
            You can add more features to the bot to tackle new environmental challenges.'
        ],
        'materials' => [
            'Software: Access to Code.org',
            'Hardware: Computer or tablet with an internet connection.',
            'Online tools: Web browser to navigate Code.org or similar platforms.',
            'Support materials: Tutorials and educational resources provided by the platform.',
            'Other tools: Optional audio or video devices to follow the tutorial.'
        ],
        'real-life-applications_title' => 'Real-life applications',
        'real-life-applications' => [
            'Artificial Intelligence in Ocean Protection: Companies and organizations like The Ocean Cleanup are using AI-powered systems to collect plastic from oceans, helping to tackle marine pollution.',
            'AI in Environmental Monitoring: AI bots are employed to monitor ocean conditions, track marine wildlife, and detect pollution, improving the efficiency of environmental protection efforts.',
        ],
        'variations_title' => 'Variations of the challenge',
        'variations' => [
            'Expanding the challenge to other environments: You could modify the challenge to involve AI bots protecting other ecosystems like forests, rivers, or even urban areas. The bots would need to address challenges such as deforestation or air pollution.',
        ],
        'duration' => '45 minutes – 1 hour',
        'experience' => 'Beginner - No prior coding experience required; suitable for complete beginners.',
        'target-audience' => [
            'Primary School students (6 to 12 years)'
        ],
    ],
    'code-it-like-margaret-hamilton' => [
        'title' => 'Code it like Margaret Hamilton !!!',
        'author' => 'Chouliara Theodora',
        'purposes' => [
            'Students will learn basic block-based coding concepts using Scratch Jr to launch a spacecraft, just like Margaret Hamilton, the woman who programmed the code for Nasa\'s Apollo to reach the moon.',
            'The activity will also help to break down gender stereotypes by highlighting the contribution of a female programmer to space exploration and encouraging girls to take up programming and STEM careers.'
        ],
        'description' => 'Program a space launch in Scratch Jr inspired by Margaret Hamilton! Code a countdown, launch a spacecraft, and break gender stereotypes by encouraging girls in Coding!',
        'instructions' => [
            '1. Introduction:',
            'The teacher presents space missions and sending humans to the moon and introduces Margaret Hamilton and her contributions to Apollo planning. This is followed by a discussion about what programming is and how we can give instructions to a computer.',
            '2. Programming activity: Margaret Hamilton codes and counts down and the spacecraft leaves for the Moon.',
            'Open the Scratch Jr. app and create a new project.',
            'Delete the character.',
            'Choose the background with space (Step1 png).',
            'Choose from the characters a woman, a spaceship and Earth (Step 2 png).',
            'Resize the characters by clicking as many times as needed on the Block "Shrink" or "Grow" (Step 3 png).',
            'Move the characters to the right position (Step 4 png).',
            'Write the programs so that the woman counts down and when she finishes her words, the spaceship goes up. To achieve this, once the green flag is pressed the woman should say the words you choose and then send a message. The spaceship should receive the message of the same colour and with the correct movement blocks the spaceship should go up. You can also make the spaceship get smaller as it moves away. To program the spaceship you can use simple blocks or the loop of repetition. (Step 5 png).',
            'Run the script by pressing the green flag.'
        ],
        'materials' => [
            'Tablet or PC (if possible, we primarily encourage using a tablet) with Scratch Jr. installed (https://www.scratchjr.org/ for tablets and https://jfo8000.github.io/ScratchJr-Desktop/ for Windows or Mac).',
            'Printed images of Margaret Hamilton and the Apollo 11 mission (optional).',
            'Printable cards with Scratch Jr. commands (https://www.scratchjr.org/teach/resources) - (optional).',
            'Projector (optional).'
        ],
        'real-life-applications' => [
            'Real life applications:',
            'This activity is not only an introduction to programming, but is linked to real-life events and applications in science and technology:',
            'Margaret Hamilton developed the software for the Apollo Guidance Computer, which allowed Apollo 11 to land safely in 1969. The activity helps children understand how computers need clear and correct commands to carry out a mission - just as NASA used code to reach the Moon.',
            'Block programming, as in Scratch Jr, is the first step to understanding more complex programming languages currently used in space missions, robotics and artificial intelligence. The same principles are used in the development of autonomous systems, such as Mars exploration robots (Curiosity, Perseverance).'
        ],
        'variations' => [
            'Variations/Suggestions:',
            'If the students are new to the app, you can create the projects first with the printed blocks.',
            'Add more characters such as planets, stars or comets.',
            'Depending on the age and the children\'s experience with the Scratch Jr app, additional challenges can be added, such as programming the spaceship to avoid obstacles.',
            'Students can also add another page showing the spaceship landing on the moon.',
            'Instead of using the "Say" block, the "Play Recorded Sound" block could be used and the students\' voices can be heard.',
            'Add astronaut characters in which you edit the faces and add the students\' photos.'
        ],
        'duration' => '60 minutes',
        'experience' => 'Intermediate - Some basic coding knowledge is recommended; participants should be familiar with fundamental programming concepts.',
        'target-audience' => [
            'Young children (ages 5-7)'
        ]
    ],
    'careers-as-constellations' => [
        'title' => 'Careers as constellations',
        'authorcontent' => 'This challenge and competition is the initiative of Linda Liukas author, illustrator and entrepreneur in connection with the Code4Europe partnership´s Girls in Digital Campaign 2025 #Webinar 1 livestreamed on Youtube: <a href="https://www.youtube.com/live/52LaQA9342k" target="_blank">How Code, Creativity and Curiosity form a Career?</a>',
        'author' => 'Linda Liukas',
        'start-date' => 'Start date',
        'activity-type' => 'Activity type',
        'open-online-activity' => 'Open online activity',
        'name-of-org' => 'Name of organisation',
        'language' => 'Language',
        'description' => 'This interactive activity helps students map their personal interests and hobbies to potential careers in technology. By visualizing their skills and passions as constellations, students discover how careers are formed by connecting seemingly unrelated dots. No prior coding experience is required, and the activity fosters creative thinking about the future of work in technology.',
        'teachers' => 'Teachers',
        'english' => 'English',
        'type-of-org' => 'Type of organisation',
        'private-business' => 'Private business',
        'secondary-school' => 'Secondary school',
        'higher-education' => 'Higher education',
        'audience' => 'Audience',
        'theme' => 'Main Themes',
        'themes' => [
            'motivation-and-awareness-raising' => 'Motivation and awareness raising',
            'promoting-diversity' => 'Promoting diversity',
        ],
        'age-group' => 'Age group',
        'age-groups' => [
            '12' => '12+ (adaptable for middle school, high school, or even university students)',
            'under-6' => 'Under 6',
            '7-8' => '7-8',
            '9-11' => '9-11',
            '12-14' => '12-14',
            '15-18' => '15-18',
            'over-18' => 'Over 18',
        ],
        'subjects' => 'Subjects',
        'time-required' => 'Time required',
        '45–60' => '45–60 minutes',
        'group-size' => 'Group size',
        'group-sizes' => [
            'small' => 'Can be done individually or in small groups',
        ],
        'required-materials' => 'Required materials',
        'step-by-step-instructions' => 'Step by step instructions',
        'materials' => [
            'one' => 'Printed Careers as Constellations worksheet (A3 recommended)',
            'two' => 'Paper <span class="font-sans">&</span> markers/pens for additional notes',
            'three' => 'Optional: Digital version (students can create constellations using Miro, Canva, or Google Jamboard)',
        ],
        'titles' =>  [
            'one' => 'Warm-up Discussion: What Are Your Dots? (5 min)',
            'two' => 'Mapping Constellations: Connecting Interests to Tech (20 min)',
            'three' => 'Example Connections',
            'four' => ' Reflection <span class="font-sans">&</span> Sharing: What Patterns Did You Find? (15 min)',
            'five' => 'Extending the Activity',
        ],
        'intro' => '<p>Start by challenging traditional career ideas with a question:</p>
         <p  class="my-8 italic">Do you think careers should follow a straight path?</p>
         <p> Introduce the idea that successful careers are often built from unexpected connections.</p><p>Watch together the talk by Linda Liukas where she shares her own career path in technology</p>',
        'content' => [
            'one' => '<p>Each student fills out the Careers as Constellations worksheet, adding:</p>',
            'two' => 'Personal interests (hobbies, skills, favorite activities)',
            'three' => 'Tech-related topics (AI, robotics, game design, digital art, sustainability tech, etc.)',
            'four' => '<strong>Drawing lines</strong> to show connections between their interests and technology',
            'five' => 'Loves music? → Interested in AI? → AI-generated music tools!',
            'six' => 'Loves drawing? → Interested in game design? → 2D/3D animation <span class="font-sans">&</span> coding',
            'seven' => 'Passionate about climate change? → Interested in data? → Environmental tech',
            'eight' => 'Invite students to share surprising connections they discovered.',
            'nine' => 'Ask: Which dots felt unrelated at first? How did they connect?',
            'ten' => '<p>Discussion Prompts:</p>',
            'eleven' => 'What surprised you about your constellation?',
            'twelve' => 'Did you discover any career paths you hadnt considered before?',
            'thirteen' => 'How could technology shape your future in unexpected ways?',
            'fourteen' => 'Digital Challenge: Have students create a digital version of their constellation using Miro, Canva, or Google Jamboard and present their findings.',
            'fifteen' => 'Research Task: Students research a person in tech whose career followed a surprising path, map their constellation and share their story.',
            '16' => 'Download the <a target="_blank" href="https://codeweek-s3.s3.eu-west-1.amazonaws.com/resources/Constellations-A3.pdf">Template</a> for the activity',
            '17' => 'OBS! REMEMBER TO ADD YOUR ACTIVITY AND UPLOAD IT <a href="/add">HERE!</a>',
        ],
    ],
    'chatbot' => [
        'title' => 'Make a chatbot',
        'author' => 'EU Code Week Team',
        'purposes' => [
            'Code interactive riddles',
            'Use code to create dialogues between a chatbot and a user',
        ],
        'description' => 'Code a conversation between a chatbot and a user who is trying to solve a riddle. Try to make a chatbot that can chat like a person. Instead of a riddle you can create a dialogue between a chatbot and a user.',
        'instructions' => [
            'Think of a riddle',
            'Log in to',
            'or create a new account. (When creating a new account keep in mind that real names are not allowed on Pencil Code due to privacy reasons.)',
            'Click Imagine and Make your own',
            'Use blocks or text-based mode to write your riddle',
            'Alternatively, you can use',
            'this code',
            'and adapt it to your riddle or you can select Answering a riddle from the menu and edit it',
        ],
        'example' => 'Check out this example of a riddle.',
        'more' => [
            'This code has been Adapted from Pencil Code activity',
            'Answering the Riddle',
        ],
    ],

    'paper-circuit' => [
        'title' => 'Unplug and code: Create a paper circuit',
        'author' => 'EU Code Week Team',
        'purposes' => ['Enhance creativity', 'Develop problem-solving skills'],
        'description' => [
            'Draw and object of your choice. It can be a night sky, a ladybird, a robot, a Christmas tree or anything you can think of. Feel free to personalize your project with EU Code Week visuals: you can explore the',
            'EU Code Week teacher toolkit',
            'and download any logo or visual you wish. You can even create a paper circuit invitation to EU Code Week. Add a motivating message to your circuit to encourage other teachers to join Code Week and/or to check the website dedicated to schools.',
        ],
        'instructions' => [
            'Draw an object and decide which parts will be illuminated (e.g. stars).',
            'Make a hole through the paper with a pencil and insert a LED sticker in each illuminated part.  ',
            'Draw a circle where you will place the coin-cell battery.',
            'Draw a + and a - track on the other side of the paper. Make sure that the longer leg of the LED circuit sticker is connected to the “+” side of the battery and the shorter to the “-” side of the battery.',
            'Lay the copper tape on the tracks.',
            'Create a fold so that when the paper covers the battery the LED is illuminated. You can use a paper clip to ensure good contact with the copper tape.',
            'Take a picture of your paper circuit and share it on Instagram, explaining why you think it is worth it to take part in this initiative.  ',
        ],
        'example' => 'See some examples of paper circuits',
        'materials' => [
            'paper or cardboard',
            'crayons or marker',
            'coin-cell battery',
            'copper tape',
            'LED circuit stickers',
            'paper clip',
        ],
    ],

    'dance' => [
        'title' => 'Create a dance',
        'author' => 'EU Code Week Team',
        'purposes' => [
            'To learn basic coding concepts',
            'To learn how to animate characters',
        ],
        'description' => 'In this challenge you will create a set of characters who will dance together. You will use a built-in media library to select characters and music clips, or you can create your own. You will animate the characters to dance and talk to each other.',
        'instructions' => [
            'Log in to',
            'as a teacher. Create student accounts and share them with your students. Alternatively share a class code and have your students register with their school email address. If you are a student, you can join as a student, but you will be asked to provide your parent’s email address so that they can approve your account.',
            'Click',
            'and give it a title',
            'Go to',
            'to add a background by clicking on the gear icon. Choose a background from the Media Library, upload your own image or you can even take a picture and upload it. Choose an audio clip and add it to the stage:',
            'Click the',
            'button to add characters or objects that you will animate so that they can move, talk and interact with each other. Add two or three characters of your choice. You can draw your own actors or modify the existing ones. Add different costumes to your character by clicking the pencil icon.',
            'Click on each actor and animate it by adding the following blocks',
            'Add a',
            'say block',
            'and have your actors talk to each other. Change the shape of the speech bubbles and the font and the size of your text',
        ],
        'example' => [
            'Check out',
            'this example',
            'of dancing robots. Feel free to use it and remix it.',
        ],
    ],

    'compose-song' => [
        'title' => 'Make a musical composition',
        'author' => 'EU Code Week Team',
        'purposes' => [
            'To learn coding through music',
            'To distinguish music genres and instruments',
            'To compose a song by mixing sound clips',
        ],
        'description' => 'In this challenge you will create a musical composition by using a programming language. You can use built-in sound clips or record your own and mix them to create a musical composition. Run your code in the Digital Audio Workstation and listen to the music you have coded. Play with different sounds and effects to modify your piece of music.',
        'instructions' => [
            'Log in to',
            'Click here to make a script',
            'Name your script and choose',
            'as a programming language',
            'Start writing your code between the',
            'and',
            'lines',
            'Browse the music clips in the',
            'Sound Library',
            'and select the music genres, artists and instruments you like',
            'To add a sound clip to your song, type',
            'Between the parenthesis there should be the following 4 parameters, separated by commas',
            'Sound clip',
            'Place your cursor between the parenthesis, go to the Sound Library, select a clip, and paste it by clicking on the blue paste icon',
            'Track number',
            'tracks help you organize your sounds by instrument-type (vocals, bass, drums, keyboards, etc.). Add as many tracks (instruments) as you want. Tracks are displayed as rows that run across the Digital Audio Workstation',
            'Start measure',
            'indicates when your sound will start playing. Measures are musical time units. One measure is 4 beats',
            'End measure',
            'indicates when your sound will stop playing',
            'Such a line of code will look like this',
            'You can add different effects, such as volume to enhance the sound of your composition. Volume ranges from -60.0 decibels to 12.0 decibels with 0.0 being the original volume.',
            'Write',
            'In the parenthesis, write the number of track, VOLUME, GAIN, level of the volume, the measure when it starts, the level and measure when it ends',
            'This is an example of a fade-in effect',
            'and a fade-out effect',
        ],
        'example' => [
            'Listen to',
            'an example of a song coded with Earsketch',
            'You can import the code and edit it',
        ],
        'materials' => [''],
        'more' => [''],
    ],
    'sensing-game' => [
        'title' => 'Make a video sensing game',
        'author' => 'EU Code Week Team',
        'purposes' => [
            'To code animated objects',
            'To develop understanding of how to control digital animation with physical movement',
            'To compose a song by mixing sound clips',
        ],
        'description' => 'In this challenge you will create a simple game that uses a video camera as a sensor to detect motion, which means that you will be able to control your animation with physical movement. In this game, the task is to collect as many EU Code Week bubbles as possible in 30 seconds. Instead of collecting bubbles, you can create a game in which you chase a character or pop balloons with your hands.',
        'instructions' => [
            'Log in to',
            'Click',
            'Add an extension',
            'and choose',
            'Video Sensing',
            'It will detect how fast an object is moving. If the number is lower, it will be more sensitive to movement.',
            'Add a sprite. Choose a sound and add it to your sprite. If you want, you can add',
            'Create a clone',
            'to duplicate your sprite.',
            'Create two variables: one for',
            'Score',
            'and the other for',
            'Timer',
            'and add them to the sprite. Set the Timer to 30 and add',
            'Change Timer by -1',
            'Create a new sprite',
            'Game Over',
            'to finish the game. You can also create a sprite with the title of your game, e.g., Collect all EU Code Week bubbles.',
        ],
        'example' => [
            'Play a video sensing game Collect all EU Code Week Bubbles. Feel free to remix',
            'this project',
        ],
    ],

    'calming-leds' => [
        'title' => 'Calming LEDs: create a simple device with micro:bit',
        'author' => 'Micro:bit Educational Foundation',
        'duration' => '20 minutes',
        'materials' => [
            'a micro:bit device and battery pack (if available)',
            'a laptop or tablet with which you can visit Microsoft MakeCode and Youtube',
            'microbit.org for the activity resources',
        ],
        'description' => 'Students create a digital device using LEDs that can help them to regulate their breathing and feel calmer. They will be asked to write some simple code, exploring animations and sequences.',
        'instructions' => [
            'The goal is to create a working Calming LED device that you can use to regulate your breathing. This device can be created on a physical micro:bit board, or on the simulator in the MakeCode editor.',
            'The challenge can be completed by using the MakeCode editor and writing a simple sequence of code as shown in the video/screenshot.',
            'To develop the challenge, students can explore different animations and get creative with the animation they would like to see to help them feel calm or happy.',
            'More information and video instructions at',
            'this link',
        ],
        'example' => 'Visit this page for instructions and videos of the completed challenge plus how to code',
        'purposes' => [
            'To design a simple digital artefact with a helpful purpose',
            'To explore sequences and animations and how they work',
            'To test and debug simple code',
            'To iterate a design by making the animations faster or slower',
        ],
    ],
    'computational-thinking-and-computational-fluency' => [
        'title' => 'Computational Thinking and Computational Fluency with ScratchJr',
        'author' => 'Stamatis Papadakis – EU Code Week Ambassador Greece',
        'purposes' => [
            'To get familiar with new commands and interface.',
            'To create simple programs with simple cause-and-effect commands.',
            'To perform simple debugging through trial and error.',
        ],
        'description' => 'In this challenge children will integrate CT concepts into their projects by using the ScratchJr app to make their stories more engaging, exciting, and emotional.',
        'instructions' => [
            'ScratchJr does not require children to be literate. All instructions and menu options are identifiable through symbols and colours. The challenge can be completed within the classroom, the lab or even in an open space as no internet is required.',
            'Children use city as background and use coding blocks to make a car drive across the city.',
        ],
        'example' => [
            'Children can use sound and motion blocks and start again blocks to make characters dance.',
            'Children pick a background and a character and use a motion block to make a car drive across the city Children can use the speed block to speed up or slow down a character.',
        ],
        'materials' => [
            'The free app',
            'works on various operating systems and types of smart devices',
            'Also, the',
            'website offers plenty of free educational material',
        ],
        'duration' => '90 minutes',
    ],
    'ai-hour-of-code' => [
        'title' => 'AI hour of Code',
        'author' => 'Minecraft Education Edition',
        'purposes' => [
            'To create coding solutions that include sequences, events, loops, and conditionals',
            'To decompose the steps needed to solve a problem into a precise sequence of instructions',
            'To explore coding concepts',
        ],
        'description' => 'A village is threatened by fire and needs you to code a solution! Meet your coding helper, the Minecraft Agent, then program the Agent to navigate the forest and collect data. This data will help the Agent predict where fires will occur. Then code the Agent to help prevent the spread of fire, save the village, and bring life back into the forest. Learn the basics of coding and explore a real-world example of artificial intelligence (AI).',
        'instructions' => 'Download the lesson plan here',
        'materials' => [
            'Install Minecraft: Education Edition',
            'After installing Minecraft Education Edition, the challenge is on',
            'this website',
        ],
    ],
    'create-a-dance' => [
        'title' => 'Create a dance with the Ode to Code on Dance Party',
        'purposes' => 'To practice coding in a fun way and feel connected with the EU Code Week community.',
        'description' => [
            'Create a dance with the Ode to Code! Use the',
            'Dance Party tutorial',
            'to code a dance to the Ode to Code. The official EU Code Week anthem is listed as a selection in Dance Party.',
        ],
        'instructions' => [
            'Instructions are shown as videos within',
            'the tutorial',
            'and also written at the top of each level',
        ],
        'example' => 'Featured student creations can be found on the following page',
        'materials' => 'The Code.org tutorial',
    ],
    'create-a-simulation' => [
        'title' => 'Create a simulation!',
        'purposes' => [
            'To learn about simulations while introducing the following variables: creating a crowd, recovery rates, wearing masks, and vaccines.',
            'To activate prior knowledge about virus outbreaks in the real world that will apply to a fictitious scenario.',
        ],
        'description' => 'Write code to create and run your own simulation of the virus outbreak at Monster Town. Learn to code and make predictions about what will happen to the neighbors of Monster Town.',
        'instructions' => [
            'Instructions are shown as videos within',
            'the tutorial',
            'and also written at the top of each level',
        ],
        'example' => 'When you are finished, you can share your simulation with others. Share your message about what you think we can do to help keep others healthy when a virus comes to town.',
        'materials' => 'The Code.org tutorial',
        'more' => [''],
    ],
    'create-your-own-masterpiece' => [
        'title' => 'Create your own masterpiece!',
        'audience' => 'Acceptable for all ages',
        'purpose' => 'To introduce computer science concepts in a visual way and inspire creativity',
        'description' => 'Create your own masterpiece with artist! Use code blocks to make your artist create a unique work of art.',
        'instructions' => 'Instructions are listed at the top of each level',
        'example' => 'Artist examples can be found on this page under drawing',
        'materials' => ['The first level of the tutorial can be found', 'HERE'],
    ],
    'cs-first-unplugged-activities' => [
        'title' => 'CS First Unplugged activities',
        'purposes' => [
            'To support students who are learning from home',
            'To give everyone a break from their screens',
        ],
        'description' => 'CS First Unplugged is a set of activities that introduce students to CS concepts without a computer. We’ve designed this lesson to demonstrate that Computer Science is a lot more than just code.',
        'instructions' => [
            'You will find the booklet to all activities in English at this',
            'link',
            'as well as Lesson Plan in English at this',
            'The activities in this lesson can be completed individually and in any order',
            'Teacher can take a picture of the learning process and share it on Instagram using #EUCodeWeekChallengeGoogle #GrowWithGoogle',
        ],
        'materials' => [
            'In addition to the activity booklet, some activities require or optionally benefit from additional materials.',
            'Small counters (like dried beans) to use on the Network a Neighborhood map.',
            'Scissors to cut out the Send a Secret Message cipher wheel.',
            'Cardboard and glue to provide additional stiffness to the Send a Secret Message cipher wheel.',
            'A thumbtack, toothpick, or straightened paper clip to connect the Send a Secret Message cipher wheel.',
        ],
    ],
    'family-care' => [
        'title' => 'Family Care',
        'experience' => 'Open for all',
        'duration' => '5 to 10 hours',
        'author' => '',
        'purposes' => [
            'To research on issue ‘family care’ that we face on a daily basis;',
            'To see problems as opportunities and generate creative solutions;',
            'To use code to innovatively realize your solutions;',
            'To design posters and present your solutions to others;',
            'To use social media to create impacts of your projects.',
        ],
        'description' => [
            'What comes to you when we talk about home? A nice house? A big dinner prepared by parents? A secret space for yourself? A warm home refuels our bodies and spirit like a gas station. Amid the hustle and bustle of modern life, parents are always busy for work. When you hang out with friends, you cannot leave your kitties behind. But how to look after your company when you are apart? The theme of the challenge is',
            'Family Care',
            'Based on this theme, students are encouraged to develop an idea to pass love and care through coding and hardware. Here are some questions for you to think about',
            'How many family members are there in your home? Who are they? Have you met any problems when staying with them? What kinds of care do they need?',
            'Do you know anyone who lacks family care more than others in your community? How can you help them?',
        ],
        'instructions' => [
            'Brainstorm and Research on the theme of family care',
            'List of any problems',
            'Generate possible solutions',
            'Select a solution',
            'Program and build up the structure',
            'Design a poster to layout your project',
            'Present it to your teachers and family members',
        ],
        'example' => ['Please find some examples from here', 'and'],
        'materials' => [
            'Coding tool:',
            'or download the',
            'PC version',
            'mBlock is a programming language based off of Scratch',
            'This challenge is also adapted from MakeX Global Spark Competition, a project-based creative design program for young people aged 6 to 13.',
            'The participating team will need to focus on the specific theme and devise a solution through software programming and hardware construction.',
            'Students are encouraged to complete the challenge in Codeweek and take it to the international level to communicate with other students and win prices.',
            'For more information, please check:',
            'or contact us at',
        ],
        'more' => [''],
    ],
    'virtual-flower-field' => [
        'title' => 'Grow your virtual flower field',
        'author' => 'Jadga Huegle - Meet and Code coach and part of the SAP Snap! team',
        'duration' => '30-60 minutes',
        'purposes' => [
            'To get to know programming with a simple yet expressive project.',
            'To learn that coding can be artistic and lead to beautiful results.',
            'To make fall brighter with colorful flowers and the EU Code Week.',
            'To show the diversity of flowers on Earth.',
            'To contribute to Sustainable Development Goals (SDGs), especially SDG13 -Climate Change by creating coding events that improve climate change education through raising awareness on this topic.',
        ],
        'description' => 'Develop a program in Snap! which grows a virtual flower field with different types of flowers and different numbers of petals.',
        'instructions' => [
            'If you need inspiration on how to get started with the challenge, check out',
            'this video',
            'or use',
            'this document',
            'to follow along',
            'The challenge can be completed by programming a virtual flower field in Snap! (or Scratch) and posting a screenshot or photo of the result online.',
            'The flower field should contain different types of flowers with different numbers of petals. Ideally, the flowers are programmed, which means that they are constructed by stamping and turning (or drawing and turning) petals repeatedly.',
            'Post an image of your virtual flower garden with #MeetandCode.',
        ],
        'materials' => [
            'We recommend using',
            'however, the project also works in',
        ],
    ],
    'haunted-house' => [
        'title' => 'Haunted House in Hedy',
        'author' => 'Felienne Hermans, Leiden University - Ramon Moorlag, I <span class="font-sans">&</span>I - CodeWeek NL',
        'audience' => 'Teachers and educators',
        'duration' => '1 hour or 2 hours depending on prior knowledge',
        'purposes' => [
            'To make an interactive Haunted House story.',
            'To learn programming with Hedy.',
        ],
        'description' => 'With Hedy, you will create a Haunted House story with interactive elements. Every time the code is run a new story will be created. The story can also be read aloud by your computer and shared online.',
        'instructions' => [
            'Start with opening a browser and go to hedycode.com.',
            'Follow the instructions for levels 1-4. Use the tabs ‘Level’ and ‘Haunted house.’',
            'With the help of these levels, we will write an interactive haunted house story.',
            'Teachers, a lesson plan Hedy can be found',
            'here',
            'You can find a recording of Felienne Hermans presenting Hedy at',
            'this link',
        ],
        'example' => 'Haunted house example at level',
        'materials' => ['Hedy on', 'level 1 to 4'],
        'more' => [''],
    ],
    'inclusive-app-design' => [
        'title' => 'Inclusive App Design',
        'author' => 'Apple Education',
        'duration' => '60 minutes + optional extension activities',
        'purposes' => [
            'To brainstorm, plan, prototype, and share an app idea that everyone could access and understand.',
        ],
        'description' => 'Great apps start with great ideas. In this activity, students will come up with an app idea on a topic they care about, then discover how to design apps with inclusion and accessibility in mind.',
        'instructions' => [
            'You will find all instructions at this link',
            'With this one-hour lesson plan, educators can guide students to',
            'Learn about inclusive app design',
            'Brainstorm topics they care about to find an app idea',
            'Outline their app ideas and plan user activities',
            'Prototype one part of their app in Keynote',
            'Share demos of their prototypes and describe how they support users with diverse backgrounds and abilities',
        ],
        'materials' => [
            'Explore the Inclusive App Design Activity at the Apple Teacher Learning Center',
            'Keynote on iPad or Mac is recommended, but not required.',
        ],
    ],
    'silly-eyes' => [
        'title' => 'Silly eyes',
        'author' => 'Raspberry Pi Foundation',
        'duration' => '25 minutes',
        'purposes' => [
            'To make a project with user interaction.',
            'To personalise a project with colour and graphic effects.',
            'To learn about design in digital making.',
        ],
        'description' => 'In this project, you will design and create a silly eye character. The character’s large, silly eyes will follow the mouse pointer to bring your character to life.',
        'instructions' => 'Please access the full project description here',
        'example' => 'Check out Gobo, Under the sea and Don\'t eat donut',
    ],
    'train-ai-bot' => [
        'title' => 'Train an AI bot!',
        'author' => '',
        'purposes' => 'To learn about artificial intelligence (AI), machine learning, training data, and bias, while exploring ethical issues and how AI can be used to address world problems.',
        'description' => 'Train an AI bot with AI for Oceans. In this activity, you will program or train AI (artificial intelligence) to identify fish or trash. Let\'s clean up the ocean!',
        'instructions' => [
            'Instructions are shown as videos within the tutorial',
            'and also written at the top of each level',
        ],
        'example' => '',
        'materials' => [
            'Tutorial can be found here',
            'This tutorial is available in over 25 languages',
        ],
        'more' => [''],
    ],

    'build-calliope' => [
        'title' => 'Build your own Calliope mini fitness trainer',
        'author' => 'Amazon Future Engineer | Meet and Code feat. Calliope gGmbH',
        'purposes' => [
            'To playfully get to know sequences, animations, repetitions and variables.',
            'To design a structure chart.',
            'To test and debug code .',
            'To optimize a program by trial and error, checking and adjusting usability.',
        ],
        'duration' => '20-30 minutes',
        'description' => 'Participants will develop a digitally controlled prototype that uses a colorful glowing LED to reproduce a preconceived 10-unit fitness exercise.',
        'materials' => [
            'Calliope mini StarterBox (if available)',
            'Laptop or tablet with which you can visit <a href="https://makecode.calliope.cc">https://makecode.calliope.cc</a> or <a href="https://calliope.cc">https://calliope.cc</a> and YouTube to access to resources for the activity.',
        ],
        'instructions' => [
            'To get started, create a plan and determine the order of the exercise units. Using the schedule, program the RGB LED of the Calliope mini to display one of the 5 colors at the predefined pace. Then create a variable for the pace and program repetitions using loops.',
            "Remember, if you've implemented the program in a way that you like, you can also share it with us at info@calliope.cc - we're excited to see what you make of it! By the way, we're giving away 30 Calliope minis among the submissions!",
            'Share the QR code of your project on Instagram, add the hashtag #EUCodeWeekChallenge and mention @CodeWeekEU.',
        ],
        'example' => [
            'While you’re sitting at your computer: you can get sporty too.',
            'Create a fitness prototype with the Calliope mini which can also be tested in the simulator. The challenge is done in the MakeCode editor by programming a simple code sequence (see screenshot).',
            'Choose 5 different colors and assign a fitness exercise to each of them, e.g. squat or jumping jacks.  Then the colors can be lined up in any order and trained.',
        ],

    ],
    'animate-a-name' => [
        'title' => 'Animate a name',
        'author' => 'Google',
        'purposes' => 'To use code to bring a name to life!',
        'duration' => '15-60 minutes',
        'description' => 'Animate a Name is a one-hour lesson designed to be completed within 15-60 minutes. Students will watch a series of videos and create one coding project.',
        'materials' => 'This lesson can be completed online or offline, but both options require access to a computer.',
        'instructions' => [
            'Pick a video in one of 21 languages from <a href="https://www.youtube.com/c/CodeweekEu/playlists?view=50&sort=dd&shelf_id=6">this page</a>',
            'Find a lesson plan in the description. Follow instructions in the video. ',
        ],
    ],
    'european-astro-pi' => [
        'title' => 'European Astro Pi Challenge - Mission Zero',
        'author' => 'Google',
        'purposes' => 'To run your python code on board the International Space Station',

        'description' => [
            'You will make a short python program that shows a pixel-art image on board the International Space Station.',
            'Your image will be displayed using the Astro Pi computer in the European Columbus module.',
        ],
        'materials' => 'Web browser only',
        'instructions' => [
            'Teacher/mentor go to <a href="https://astro-pi.org/mission-zero/">https://astro-pi.org/mission-zero/</a>',
            'Check eligibility/guidelines and sign up for a login',
            'This will create a classroom code, two random words e.g. fast-dog',
            'Display this code in the computer lab',
            'Students browse to <a href="https://rpf.io/mzproject">https://rpf.io/mzproject</a> and follow the steps to complete the activity',
            'When students finish they type in the classroom code to link their submission to your login',
            'Valid entries will be run on the International Space Station in May 2023',

        ],

    ],
    'common' => [
        'share' => 'Share the link or QR code of your project on Instagram or Facebook, add the hashtag #EUCodeWeekChallenge and mention @CodeWeekEU.',
        'audience' => [
            'Teachers and educators',
            'Primary School students (6 to 12 years)',
            'Lower Secondary School students (12 to 16 years)',
            'Upper Secondary School students (16 to 18 years)',
        ],
    ],
    'code-a-dice' => [
        'title' => 'Code a Dice to Roll',
        'author' => 'Fabrizia Agnello',
        'purposes' => [
            'Code interactive riddles',
            'To code a simulation of a randomly moving object to be used if the real object is not available',
        ],
        'description' => 'In this challenge you will code a dice to randomly roll on your command. You can choose any type of dice with the number of faces you like, as those used in role play games, and add sounds as well. ',
        'instructions' => [
            'Log in to Scratch',
            'Choose a backdrop',
            'Create your dice sprite or search for one on the web and upload it to your program',
            'Create as many costumes for the sprite as the number of faces of the chosen dice, each of them showing a different number',
            'Choose how you want the dice to start rolling (pressing a keyboard key, clicking on the sprite, etc.) and write the code',
            'Code the sprite to randomly change costume at the end of the roll',
            'Add sound effects',
        ],
        'example' => 'Roll a D-20 dice',
    ],
    'personal-trainer' => [
        'title' => 'Personal trainer with micro:bit',
        'author' => '',
        'purposes' => [
            'To code micro:bit in order to use the buzzer and led panel',
            'To create a personal device to control your physical activity',
            'To code micro:bit to improve your health through sport',
        ],
        'description' => 'This challenge allows you to code your micro:bit to control the repetition times of physical exercises combined with rest time. You will track your physical activity at school, at home or in the park.',
        'instructions' => [
            'When A+B, create a 3-second countdown timer with a musical note sound every second and display the word GO!',
            'During the first exercise, display a flashing 2x2 square for 20 seconds. Then play a sound and keep the square fixed. During the remaining time, another flashing image must be displayed for 10 seconds. When it finished, play a sound.',
            'Then repeat the same action but display a 3x3 panel for the exercise time. Repeat these actions until the 5x5 panel is displayed.',
        ],
        'duration' => '30-40 minutes',
    ],
    'create-a-spiral' => [
        'title' => 'Create a spiral',
        'author' => 'Lydie El-Halougi',
        'purposes' => [
            'To learn and practice loop and variables.',
            'To enhance creativity in coding.'
        ],
        'description' => 'In this challenge you will write a project with Scratch to create a spiral, using the pen blocks, a loop and a variable.',

        'instructions' => [
            'The Pen blocks',
            'Create a new project and name it Spiral.',
            'Click on the purple icon “Add extension” on the bottom-left side of the window',
            'Select “pen”: the pen blocks are now available for your project!',
            'To start your project, drag and drop the “when green flag clicked” block:',
            'You need to start with a blank page: within the pen blocks, add the “erase all” block:',
            'You want to start drawing at the center of the stage, which means your sprite has to go to the center of the stage (0,0):',
            'Your sprite can move without drawing, or move and draw:',
            'when you want it to draw, you can use the pen down block',
            'when you don’t want that, you can use the pen up block',
            'Now, you want to draw! Add the “pen down” block:',
            'The hexagon',
            'Add the blocks below to your project:',
            'You now have one sixth of your hexagon. You need to repeat this sequence 6 times:',
            'The spiral',
            'To create a spiral, you’ll need to add 2 to the length of each next side.',
            'To do so, you will use a <strong>variable.</strong>',
            'In the variable blocks, click on Make a Variable',
            'Name it length, then click OK:',
            'The spiral is going to grow, you’ll need to start small: set the first length to 10, and insert this block before the loop.',
            'Insert the variable “length” in the “move … steps” block',
            'To have the spiral grow, you also need to have the length grow in every loop: add the block below at the end of the loop:',
            'Here is your current project:',
            'A beautiful spiral ',
            'You drew a spiral! For it to go on and on, replace the “repeat 6” loop with the “forever” loop:',
            'To draw a colorful spiral, add the following block in the loop:',
            'When you start over, the sprite draws an unwanted line. To prevent it, add a “pen up” block at the beginning of the project.',
            'Here’s your final project:',
            'Congratulations! You created a lovely spiral!',
        ],

    ],
    'play-against-ai' => [
        'title' => 'Create and play against AI - Rock, Scissors, Paper Game',
        'author' => 'Kristina Slišurić',
        'purposes' => [
            'to understand how the machine learning cycle works.',
            'to build a machine learning model using Teachable Machine',
            'to familiarize yourself with the Pictoblox tool and import the created model into the project',
            'to set the stage and characters, create and initialize variables in Pictoblox',
            'to initialize the game, identify player movements, program random AI movements',
            'to create and test a game that involves artificial intelligence as an opponent in a game of Rock, Paper, Scissors.',

        ],
        'description' => 'We will create a model using Teachable Machine from images using three classes: Rock, Scissors and Paper. Model will be loaded into Pictoblox and used to create game which we can play against AI.',
        'duration' => '90 minutes',
        'instructions' => [
            'Create a new image project on Teachable machine with 3 classes named Rock, Paper, and Scissor. For each class, capture via camera at least 400 pictures. Make sure to have a clear background. Train and export the model. Upload model and copy link.',
            'Create a free account on Pictoblox site. Add a Machine Learning Extension and upload a model. Set the stage, variables and sprites. Initialize the game, identify player moves and the moves of AI and who wins the round.',
            'Train the data for the game.',
            'Testing the model.',
            'Export the model.',
            'Add machine learning extension and load the model.',
            'Set up the stage, variables and Sprite.',
            'Initialize the game.',
            'Identify Player’s Moves.',
            'Set random AI Moves.',
            'Broadcast random AI moves.',
            'Make three blocks. Who wins the round? ',
            'Check if the player wins the round.',
            'Check if the AI wins the round.',
            'Check if round is a draw.',
            'Program blocks.',
            'Rock Paper Scissors Sprite',
        ],
    ],
    'air-drawing-with-AI' => [
        'title' => 'Air drawing with AI',
        'author' => 'Kristina Slišurić',
        'purposes' => [
            'to write a program using the human body detection extension to recognize the movement of fingers in front of the camera.',
            'to code with simple blocks in a few lines of code.',
            'to see an example of using AI',
        ],
        'description' => 'Creation of a program that allows the user to draw in the air with their hand (index finger) in front of the camera and everything they draw is automatically displayed on the stage of Pictoblox.',
        'instructions' => [
            'Create account on Pictoblox',
            'follow the visual instructions to:',
            'add extensions Human Body Detection and Pen;',
            'set the stage and add sprite (Pencil) and additional sprites for: Pen Down, Pen Up, Delete all;  ',
            'write a code for sprite Pencil to follow the finger',
            'write a code for buttons: Pen Up, Pen Down and Delete all and also for Pen',
            'Now you are set to make your own drawings and play with different colors and size of a pen.',
        ],
        'materials' => [
            'A laptop or a computer with a camera',
            'The latest version of PictoBlox downloaded (recommended) or online Pictoblox (free)',
            'Pictoblox account (free)',
            'Good Internet connection',
        ],
    ],
    'emobot-kliki' => [
        'title' => 'Emobot Kliki',
        'author' => 'Margareta Zajkova',
        'purposes' => [
            'To learn basic concepts of machine learning and text recognition.',
            'To understand the role of emotions in communications.',
            'To use code to create dialogues between chatbot and a user.',
            'To understand how computers can recognize emotional tones through text analysis and respond accordingly.',
        ],
        'description' => [
            'Create Emotional Bot in Scratch that can display happy face for positive messages (if you say nice things to it), an angry face for negative messages (if you say mean things to it) and confused face if the message is unspecified.',
            'Our Emobot Kliki will recognize compliments and insults so we will see how computers can be trained to recognize emotional tone.',
        ],
        'instructions' => [
            'To get started, program a list of rules for what is nice or kind and what is bad or mean.',
            'Log in to https://machinelearningforkids.co.uk/ or create a new account.',
            'Make a new machine learning model adding 3 new labels, first call it “nice”, second bucket called “bad” and optional if you want to recognize your name, create third label called “name”.',
            'Train the new machine learning model, test it and use it to make Emobot in Scratch.',
            'Launch the Scratch 3 editor, delete the cat sprite, insert 3 new sprites made by Microsoft Bing Image Creator (happy, angry and not sure computer cartoon) or create a new sprite by clicking on the Paint icon by drawing three copies of the costume for happy, angry and not sure face.',
            'Click the “Code” tab and enter the following script.'
        ],
        'example' => [
            'Share your Emobot Kliki with your friends and learn more about AI and emotions!',
            'Instead of a computer cartoon you can try something different, like an animal. Instead of  kind and mean you could train the character to recognize other types of messages.',
        ],

    ],
    'craft-magic' => [
        'title' => 'Craft Magic with AI Hand Gestures',
        'author' => 'Georgia Lascaris',
        'purposes' => [
            'To cultivate coding skills among students, allowing them to use basic commands.',
            'To develop algorithmic thinking skills by breaking down complex tasks into manageable steps.',
            'To encourage creative problem-solving in finding unique applications of hand gestures for drawing and writing.',
            'To foster an understanding of AI concepts, particularly how AI enables computers to recognize and interpret hand gestures.',
            'To raise awareness about the significance of technology for individuals with disabilities.',
            'To promote collaborative problem-solving and teamwork among students as they work together to improve their hand gesture programs.',
            'To connect coding and computational thinking skills to real-world applications, emphasizing the meaningful impact of technology on people\'s lives and aligning with Sustainable Development Goals(SDGs).',
        ],
        'duration' => [
            '90 min for students 10-12',
            '45 min for students 12-15',
        ],
        'description' => 'Create a Scratch block-based program using the AI “Human Body” extension in a creative and engaging way, in order to draw on a screen without the need for a traditional mouse or touchscreen.',
        'instructions' => [
            'Connect to the https://ai.thestempedia.com and create a teacher <span class="font-sans">&</span> students accounts.',
            'Import the extensions ‘Human Body Detection’,’ Pen’,’ Text to Speech’.',
            'Add the ‘Pencil’ Sprite from the library and create 7 sprites (‘write’, ‘clear’, ‘black’, ‘red’, ‘blue’, ‘green’, ‘pink’).',
            'Write commands to check what happens when the ‘pencil’ sprite touches one of the other sprites.',
            'Write commands to enable the camera to recognize Hand Pose and move the pencil to the x and y coordinates of your index finger.',
            'Change costume at the end of the roll.',
            'Add sound effects.',
        ],
        'materials' => [
            'Programming platform https://ai.thestempedia.com (free)',
            'teacher account (free)',
            'student account (free)',
            'Computers with camera',
            'Internet connection',
        ],
    ],
    'circle-of-dots' => [
        'title' => 'A circle of dots',
        'author' => 'Marin Popov',
        'purposes' => [
            'To write code to draw a line of points.',
            'To write code to draw a line of dashes.',
            'To write code to draw a circle.',
            'Write code to draw a circle of dots (dashes).',
        ],
        'description' => 'Draw a circle from dots or dashes.',
        'duration' => '40 minutes',
        'instructions' => [
            'Building a dot block.',
            'Building a dash block.',
            'Constructing a circle from dot.',
            'Constructing a circle from dash.',
        ],
    ],
    'coding-escape-room' => [
        'title' => 'Create a coding escape room',
        'author' => 'Stefania Altieri and Elisa Baraghini',
        'purposes' => [
            'To teach/learn and reflect about coding concepts.',
            'To use simple coding tools.',
            'To develop computational thinking and problem solving.',
        ],
        'description' => [
            'Create an escape coding experience like this:',
            'You can use google form, genially, google presentation, any tool to create a storytelling based on coding ;).',

        ],
        'duration' => '90 minutes',
        'instructions' => 'You can divide your students in small group, they can play and then create another challenge with the template: ',

        'materials' => [
            'Any tool can be used (Google and Microsoft platform to create and share documents, presentations and sheets). Any coding construct, tool or character linked to ICT and coding.',
        ],
        'example' => [
            'Some characters who had a very important role in the ICT history and basic concepts of coding and programming, are introduced by playing. This is the best way to learn and actively participate. This game can be played in teams or individually, like a challenge or a competition. Students can then create something similar and develop competences such as creativity and coding skills.',
            'This is a very practical resource to be re-used and to be easily re-created. Google forms is one of the possible tools. You can also use Google slides, Genial.ly or Emaze or any other tool to create crossroads stories and your own adventures.',
            'The escape challenge is divided in sessions. If you guess you can go ahead. Students have to create the coding quizzes.',
        ],
    ],
    'let-the-snake-run' => [
        'title' => 'Let the snake run',
        'author' => 'Ágota Klacsákné Tóth',
        'purposes' => [
            'To code the snake\'s movement on their own micro:bit.',
            'To set the correct placing and timing for the joint animation.',
        ],
        'description' => 'Students must write codes to navigate the snake through micro:bits next to each other. It has to be done in a way that it looks like the snake is running from one micro:bit to the other.',
        'duration' => '30 minutes',
        'instructions' => [
            'Design a track that goes through several micro:bits next to each other (e.g., forming a 2x2 square).',
            'Write codes as a snake moves along a track.',
            'Work on your own device then put them together and run the code.',
            'Consider the timing and placement: If the snake goes out of one micro:bit, it will appear on the next micro:bit.',
            'Further challenges: With micro:bit v2, play music until the snake leaves your device.',
            'Design the snake by changing the brightness of the LEDs.',
            'Try longer, or more snakes.',
        ],
        'example' => [
            'This is an example for a 6 pixel long snake with4 micro:bits forming a 2x2 square: ',
            'Coding the starting micro:bit (the teacher can do it)',
            'All codes are initiated by this micro:bit, which sends a radio signal to other micro:bits when the A button is pressed.',
            'Coding the snake movement',
            'Each micro:bit must be in the same radio group as the starting micro:bit.',
            'Allanimations start when the radio signal is received.',
            'The animation of the first microbit is immediately visible, the others wait until the snake gets there.',
            'The time between the two phases determines the speed of the snake.',
        ],
        'materials' => [
            'micro:bits (for every student if possible)',
            'laptop or computer for makecode.microbit.org editor',
        ],
    ],
    'illustrate-a-joke' => [
        'title' => 'Illustrate a joke with bitsy',
        'author' => 'Margot Schubert',
        'purposes' => 'To design a little game where the user finds the answer to a joke question.',
        'description' => 'The students design a game where the user finds the answer to a joke question when the figure hits an object on the playing field. The students use basic features of bitsy to complete the challenge.',
        'instructions' => [
            'Think of a joke question. Go to bitsy and start a new project. You will need:',
            'an avatar - sprite that you can move around',
            'A white cat on a purple background',
            'Description automatically generated',
            'an object to which your avatar has to go',
            'a room - the background of your program',
            'two messages: a question and an answer',
            'The finished game can be downloaded as an html file.',
        ],
        'example' => 'In this website you see an example of a joke and there is a link to a digital whiteboard:',
        'materials' => 'bitsy runs in a browser',
    ],
    'app-that-counts-in-several-languages' => [
        'title' => 'App that counts in several languages',
        'author' => 'Samuel Branco',
        'purposes' => [
            'To learn how to create a simple app.',
            'To learn to program through blocks.',
            'To learn how to add Labels, buttons, images, sensors and media.',
            'To learn how to organize elements on an app screen.',
        ],
        'description' => 'The app lets you count in multiple languages at the press of a button. Whenever the user shakes the smartphone, the count goes back to zero. The challenge is to add another language.',
        'instructions' => [
            'To complete the challenge, you need to define the other language in which you want the app to count.',
            'Then you have to download from the internet (e.g. from Pixabay or Unsplash) the flag of that country and upload it to the MIT APP Inventor platform through the element called flag, in the Picture property.',
            'Next you should find out how to spell the name of the country in English and how to say leave and press me in the language of that country.',
            'Finally, you have to add the necessary blocks for the app to work in the new language.',
        ],
        'materials' => [
            'To develop an app you need a computer or a laptop with internet access.',
            'Create an account on the MIT APP Inventor platform, accessible through the <a href=\'https://ai2.appinventor.mit.edu\'>https://ai2.appinventor.mit.edu</a>',
            'It is also necessary to install the MIT AI2 Companion app on the smartphone in order to test the developed application.',
        ],
    ],
    'coding-with-art-through-storytelling' => [
        'title' => 'Coding with art through Storytelling',
        'author' => 'Maria Tsapara and Anthi Arkouli',
        'purposes' => [
            'To cultivate skills of observation, interpretation, and questioning through engagement with art.',
            'To be creative and collaborate with others for a common goal',
            'To create an algorithm in order to re-narrate the story.',
        ],
        'description' => 'In this challenge students will get inspired by an artwork, create a story and illustrate it. Then they will try to re-narrate the story by using a programmable robotic kit/or as an unplugged activity.',
        'materials' => [
            'This activity can be implemented as an unplugged activity or by using an educational programmable robot such as beebot/bluebot/mouse robot.',
            'beebot arrow cards or arrow cards for the unplugged activity',
            'in Greek',
            'In order to learn more for the Project Zero\'s Thinking Routine Toolbox you can visit',
            '',
        ],
        'example' => [
            'The teacher works with the students to model how to design an algorithm with the cards that will provide instructions for the Bee-Bot or other robot to get to the first event of the story on the mat. Students work in teams of 3-4 to design an algorithm for the robot to move to the next sequence. Students test their algorithms on the class mat and debug, as necessary.',
            'They continue to move through as many story events as they can',
            'This activity can be implemented also as an unplugged activity.',
            'One child is the robot - another child the programmer. The programmer creates an algorithmic path by using the arrow cards in order to help the robot  to move from one image to another and re-narrate the story. Each time the robot is in an image it is asked to tell a part of the story.',
        ],
        'instructions' => [
            'The teacher asks students to observe a painting/photo.',
            'They use the thinking routine "Beginning, Middle, End" (Project Zero of Harvard School) in order to create a story.',
            'The teacher asks them "If this artwork is the beginning/middle/end of a story, what might happen next/before/in the end?',
            'Students illustrate the events of the story.',
            'Students recall the story and put the events in the grid. Using arrow cards, they create an algorithm helping beebot re-narrate the story.',
        ],
    ],
    'coding-with-legoboost' => [
        'title' => 'Coding and programming with LegoBoost - Scratch extension',
        'author' => 'Lidia Ristea',
        'purposes' => [
            'to build models using LegoBoost.',
            'to develop programming skills in Scratch.',
            'to program robots using commands from simple to complex.',
        ],
        'description' => 'In this challenge, students will use the Scratch-LegoBoost extension and enter codes in the application for the robots to move forward, backward, obstacle avoidance and voice commands.',
        'duration' => '120 minutes',
        'instructions' => [
            'Log in to the Scratch.mit.edu application.',
            'Launch Scratch Link and activate Bluetooth on the Laptop.',
            'Click Add an Extension from Scratch and choose LegoBoost.',
            'Add a picture about EU Code Week.',
            'Set the two AB motors ON, and when meeting a red obstacle, OFF.',
            'In the green color motor A is set ON, in the black color motor B ON.',
            'Green, red and black obstacles will be placed on a route.',
            'Add commands for movement and turns from arrows and text-to-speech when encountering an obstacle.',
            'Test it!',
        ],
        'example' => [
            'The students will program the robots by rotation and enter commands in the Legoboost android application, to avoid obstacles, to launch with the spring, to stop at the red color and to emit a sound signal. On the Laptop, starting from the example presented and the sequences in the attached file, the students will program the robots where they will introduce:',
            'commands for moving forward, backward, left, right using the arrows,',
            'avoiding obstacles, stopping at a certain color',
            'a 3 m route will be set up and a variable will be created "timer" = 30 s,',
            'text to speech (Scratch extension), when it encounters an obstacle.',
            'if in 30 s the robot avoids the obstacles and it reaches at the end, It add text in speech "I succeeded" else , I have to practice again.',
            'save with the name "LegoBoost extension" and share with the colleagues. ',
        ],
    ],
];

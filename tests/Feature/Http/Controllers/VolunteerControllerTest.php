<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\VolunteerController
 */
class VolunteerControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function approve_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $volunteer = \App\Volunteer::factory()->create();

        $response = $this->get(route('volunteer_approve', [$volunteer]));

        $response->assertRedirect(route('volunteers'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function create_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('volunteer'));

        $response->assertOk();
        $response->assertViewIs('volunteer.create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $volunteers = \App\Volunteer::factory()->times(3)->create();

        $response = $this->get(route('volunteers'));

        $response->assertOk();
        $response->assertViewIs('volunteer.index');
        $response->assertViewHas('volunteers', $volunteers);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function reject_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $volunteer = \App\Volunteer::factory()->create();

        $response = $this->get(route('volunteer_reject', [$volunteer]));

        $response->assertRedirect(route('volunteers'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('volunteer_store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('profile'));

        // TODO: perform additional assertions
    }

    // test cases...
}

<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\PodcastsController
 */
class PodcastsControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function index_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $podcasts = \App\Podcast::factory()->times(3)->create();

        $response = $this->get(route('podcasts'));

        $response->assertOk();
        $response->assertViewIs('podcasts');
        $response->assertViewHas('podcasts', $podcasts);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $podcast = \App\Podcast::factory()->create();

        $response = $this->get(route('podcast', [$podcast]));

        $response->assertOk();
        $response->assertViewIs('podcast');
        $response->assertViewHas('podcast', $podcast);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function upcoming_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $podcasts = \App\Podcast::factory()->times(3)->create();

        $response = $this->get(route('podcasts_upcoming'));

        $response->assertOk();
        $response->assertViewIs('podcasts-upcoming');
        $response->assertViewHas('podcasts', $podcasts);

        // TODO: perform additional assertions
    }

    // test cases...
}

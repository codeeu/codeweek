<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\ExcellenceController
 */
class ExcellenceControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function generate_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $excellence = \App\Excellence::factory()->create();

        $response = $this->post(route('certificate_excellence_report', ['edition' => $excellence->edition]), [
            // TODO: send request data
        ]);

        $response->assertRedirect('certificates');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function generate_aborts_with_a_403(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $excellence = \App\Excellence::factory()->create();

        // TODO: perform additional setup to trigger `abort(403)`...

        $response = $this->post(route('certificate_excellence_report', ['edition' => $excellence->edition]), [
            // TODO: send request data
        ]);

        $response->assertForbidden();
    }

    /**
     * @test
     */
    public function report_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $excellence = \App\Excellence::factory()->create();

        $response = $this->get(route('certificate_excellence', ['edition' => $excellence->edition]));

        $response->assertOk();
        $response->assertViewIs('excellence.report');
        $response->assertViewHas('edition');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function report_aborts_with_a_403(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $excellence = \App\Excellence::factory()->create();

        // TODO: perform additional setup to trigger `abort(403)`...

        $response = $this->get(route('certificate_excellence', ['edition' => $excellence->edition]));

        $response->assertForbidden();
    }

    // test cases...
}

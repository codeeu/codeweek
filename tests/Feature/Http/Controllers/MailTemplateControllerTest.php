<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\MailTemplateController
 */
class MailTemplateControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function ambassador_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $event = \App\Event::factory()->create();
        $users = \App\User::factory()->times(3)->create();

        $response = $this->get('mail/template/ambassadors/new');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function approved_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $event = \App\Event::factory()->create();
        $users = \App\User::factory()->times(3)->create();

        $response = $this->get('mail/template/creators/approved');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function registered_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $event = \App\Event::factory()->create();
        $users = \App\User::factory()->times(3)->create();

        $response = $this->get('mail/template/creators/registered');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function rejected_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $event = \App\Event::factory()->create();
        $users = \App\User::factory()->times(3)->create();

        $response = $this->get('mail/template/creators/rejected');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function remind_ambassador_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $users = \App\User::factory()->times(3)->create();

        $response = $this->get('mail/template/ambassadors/remind_ambassador');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function remindcreators_returns_an_ok_response(): void
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = \App\User::factory()->create();

        $response = $this->get('mail/template/remind/creators');

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
